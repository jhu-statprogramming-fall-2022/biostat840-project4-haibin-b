---
title: "Project 4"
output: 
  flexdashboard::flex_dashboard:
    orientation: columns
    vertical_layout: fill
runtime: shiny
---


```{r setup, include=FALSE}
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(flexdashboard)
library(DT)
library(shiny)
library(tidyverse)
library(kableExtra)
library(FactoMineR)
library(factoextra)
library(caret)
library(corrplot)
library(ggplot2)
library(tidyselect)
library(mgcv)
library(plotly)
```

# About

## Column {.sidebar}
**Purpose of Dashboard**

This dashboard shows the process of developing Social Determinant of Health (SDOH), especially, housing-related composite score. 

**Audience**

We hope our dashboard could give some ideas about developing domain-specific composite score for those who are interested in the SDOH domain.

## Column
### **Navigate the dashboard**
<iframe
    width="700"
    height="600"
    src="https://player.vimeo.com/video/784033684?h=ba5e5819b9&amp;badge=0&amp;autopause=0&amp;player_id=0&amp;app_id=58479"
    frameborder="0"
    allow="autoplay; encrypted-media"
    allowfullscreen
>
</iframe>

# Data

## Column {.sidebar}
### **Description of dataset**

We used Geo Social Analytic Platform (GSAP) data, which was developed by Johns Hopkins Center for Population Health Information Technology.

GSAP: CPHIT is developing a large Geo Social Analytic Platform (GSAP) database of publicly available data at the census tract level.This database will link American Community Survey (ACS), ArcGIS data (as available), road systems, and other geographic level data to design a database that can be utilized to understand non-medical factors associated with specific conditions, utilization, cost, etc. (Source: <https://www.jhsph.edu/research/centers-and-institutes/johns-hopkins-center-for-population-health-information-technology/research/current-projects.html>) 

## Column
### **Sample of data**

```{r message=FALSE, warning=FALSE, include=FALSE}
housing <- read.csv('housing.csv')
```

```{r, echo=FALSE}
# Create the DT table first
DT_table <- housing %>%
  dplyr::select(fuelheat,
                housingvalue,
                rooms) %>%
  rename("Percentage of reliable energy" = fuelheat) %>%
  rename("Average housing value" = housingvalue) %>%
  rename("Average number of rooms" = rooms)
```

```{r, echo=FALSE}
DT::renderDataTable({
  DT::datatable(DT_table,
                caption = htmltools::tags$caption(
                  style = 'caption-side: top; text-align: Left;',
                  htmltools::withTags(
                    div(HTML('Click here to be redirected to a page where this data can be downloaded.')))),
                options = list(autoWidth = TRUE,
                               pageLength = 10,
                               scroller = TRUE,
                               scrollY = '450px'))
})
```

# Data Dictionary

column 1 {data-width = 200}
-----------------------------------------------------------------------
### **Data details and methodology**
We used county-level GSAP data in 2018, which includes 3,220 counties. We applied principal component analysis (PCA) the housing related variables into several domains and then develop composite score for each domains. 

column 1 {data-width = 800}
-----------------------------------------------------------------------
### **Data dictionary shows below:**

```{r message=FALSE, warning=FALSE, include=FALSE}
data_dic <- read.csv("DataDic.csv")
```

```{r}
data_dic %>%
  knitr::kable() %>%
  kable_material(c("striped", "hover"))
```

# Exploratory Data Analysis

```{r message=FALSE, warning=FALSE, include=FALSE}
# convert character to numeric
housing <- housing %>% 
  mutate_at(vars(-("geoid")), as.numeric)
```

```{r message=FALSE, warning=FALSE, include=FALSE}
# detect and delete missing value
sum(is.na(housing))
sum(is.null(housing))
dim(housing)
housing_clean <- na.omit(housing)
sum(is.na(housing_clean))
sum(is.null(housing_clean))
dim(housing_clean)
```

```{r message=FALSE, warning=FALSE, include=FALSE}
# feature scale
preproc <- preProcess(housing_clean, method=c("range"))
housing_norm <- predict(preproc, housing_clean)
summary(housing_norm)
```

### **Distribution of housing variables**

```{r}
box_ggplot = housing_norm %>%
  pivot_longer(-geoid, names_to = "house_char", values_to = "value") %>%
  ggplot(aes(x = reorder(house_char, value), y = value, fill = house_char)) +
  geom_boxplot() + 
  coord_flip() +
  labs(x = "Housing variables",
       y = "Value",
       caption = "Haibin Bai",
       fill = "Housing variables")

ggplotly(box_ggplot)
```

# Data visualization

All variables column {data-width=500, .tabset}
-----------------------------------------------------------------------

```{r message=FALSE, warning=FALSE, include=FALSE}
housing_norm <- housing_norm %>% subset(select = -geoid)
# correlation plot
corr_matrix <- cor(housing_norm)
res.pca <- PCA(housing_norm, ncp = ncol(housing_norm), graph = FALSE)
eig.val <- data.frame(get_eigenvalue(res.pca))
var <- get_pca_var(res.pca)
```

### **Correlation Plot**
```{r}
corrplot(corr_matrix, method="pie", type = "upper")
```

### **Scree plot**
```{r}
print(fviz_eig(res.pca, addlabels = TRUE, ncp = ncol(housing_norm)))
```

### **PCA plot**
```{r}
print(fviz_pca_var(res.pca, col.var = "contrib", gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07")))
```

### **Contribution plot**
```{r}
corrplot(var$cos2, is.corr=FALSE)
```

Financial subgroup column {data-width=500, .tabset}
-----------------------------------------------------------------------
```{r}
financial <- housing_norm %>% select(housingvalue, mortgage, mortgagecost, mortgageval, rentgross)
# correlation plot
corr_matrix <- cor(financial)
res.pca <- PCA(financial, ncp = ncol(financial), graph = FALSE)
eig.val <- data.frame(get_eigenvalue(res.pca))
var <- get_pca_var(res.pca)
```

### **Correlation Plot**
```{r}
corrplot(corr_matrix, method="pie", type = "upper")
```

### **Scree plot**
```{r}
print(fviz_eig(res.pca, addlabels = TRUE, ncp = ncol(financial)))
```

### **PCA plot**
```{r}
print(fviz_pca_var(res.pca, col.var = "contrib", gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07")))
```

### **Contribution plot**
```{r}
corrplot(var$cos2, is.corr=FALSE)
```


Owner status subgroup column {data-width=500, .tabset}
-----------------------------------------------------------------------
```{r}
owner_status <- housing_norm %>% select(occupy, occupyown, rentprcinc, units, unitsownpop, rooms)
# correlation plot
corr_matrix <- cor(owner_status)
res.pca <- PCA(owner_status, ncp = ncol(owner_status), graph = FALSE)
eig.val <- data.frame(get_eigenvalue(res.pca))
var <- get_pca_var(res.pca)
```

### **Correlation Plot**
```{r}
corrplot(corr_matrix, method="pie", type = "upper")
```

### **PCA plot**
```{r}
print(fviz_pca_var(res.pca, col.var = "contrib", gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07")))
```

### **Scree plot**
```{r}
print(fviz_eig(res.pca, addlabels = TRUE, ncp = ncol(owner_status)))
```

### **Contribution plot**
```{r}
corrplot(var$cos2, is.corr=FALSE)
```

House condition subgroup column {data-width=500, .tabset}
-----------------------------------------------------------------------
```{r}
house_condition <- housing_norm %>% select(fuelheat, kitchen, plumbing)
# correlation plot
corr_matrix <- cor(house_condition)
res.pca <- PCA(house_condition, ncp = ncol(house_condition), graph = FALSE)
eig.val <- data.frame(get_eigenvalue(res.pca))
var <- get_pca_var(res.pca)
```

### **Correlation Plot**
```{r}
corrplot(corr_matrix, method="pie", type = "upper")
```

### **Scree plot**
```{r}
print(fviz_eig(res.pca, addlabels = TRUE, ncp = ncol(house_condition)))
```

### **PCA plot**
```{r}
print(fviz_pca_var(res.pca, col.var = "contrib", gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07")))
```

### **Contribution plot**
```{r}
corrplot(var$cos2, is.corr=FALSE)
```

# Narrative and Summary

This dashboard is using PCA to generate factor-based composite score, which could use one score represents multiple variables. It is hard to say the performance of the composite score, which could be improved, but it could be distinguished by different counties.

Reference:


